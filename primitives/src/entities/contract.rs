//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

use crate::entities::{ContractState, ContractType};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "contract")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    pub class_id: i64,
    pub chain_id: String,
    pub asset_id: String,
    pub address: String,
    pub owner: Option<String>,
    pub protocol: ContractType,
    pub decimals: Option<i32>,
    pub identifier: Option<String>,
    pub max_supply: Option<String>,
    pub mint_limit: Option<String>,
    pub not_before: Option<i64>,
    pub tx_hash: Option<String>,
    pub state: ContractState,
    pub deployed_at: Option<TimeDateTimeWithTimeZone>,
    pub created_at: Option<TimeDateTimeWithTimeZone>,
    pub updated_at: Option<TimeDateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
